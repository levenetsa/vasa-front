{"version":3,"sources":["components/Rect.js","components/Solution.js","utils/utils.js","components/PackerTable.js","components/Chart.js","App.js","index.js"],"names":["Rect","props","style","stroke","strokeWidth","x","y","width","w","height","h","fill","seed","index","Math","floor","abs","sin","toString","mult","Solution","console","log","rects","data","map","it","rotated","px","py","min_x","min","apply","min_y","max_x","max","max_y","Paper","padding","paddingLeft","backgroundColor","backgroundImage","border","rect","key","stripWidth","packHeight","transform","updateState","newValues","originalStateCopy","Object","assign","this","state","newState","setState","PackerTable","solutions","selected","onSelectedPackerChange","bind","solution","callback","prevProps","efficency","Table","aria-label","TableHead","TableRow","TableCell","size","align","TableBody","row","packerName","onClick","event","component","scope","price","toFixed","React","Component","Chart","file","content","elements","activeSolution","prevState","snapshot","context","name","fetch","then","result","json","sort","a","b","catch","error","Grid","container","direction","spacing","item","xs","selectedPackerChanged","ctInput","App","makeStyles","theme","root","flexGrow","paper","textAlign","color","palette","text","secondary","files","componentDidUpdate","onSelectedFileChange","length","response","paddingTop","List","ListItem","button","ListItemText","primary","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59acdca7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction getRandomColor(seed) {\r\n  let hex = Math.floor(Math.abs(Math.sin(seed + 777) * 16777215) % 16777215);\r\n  return \"#\" + hex.toString(16);\r\n}\r\n\r\nfunction Rect(props) {\r\n  return (\r\n    <rect\r\n      style={{ stroke: \"#000000\", strokeWidth: \"1\" }}\r\n      x={props.x}\r\n      y={props.y}\r\n      width={props.w}\r\n      height={props.h}\r\n      fill={getRandomColor(props.index)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Rect;\r\n","import React from \"react\";\r\nimport Rect from \"./Rect.js\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst mult = 10;\r\n\r\nfunction Solution(props) {\r\n  console.log(\"re-render\");\r\n  let rects = props.data.rects.map(it => {\r\n    return {\r\n      index: it.index,\r\n      rotated: it.rotated,\r\n      x: it.x * mult,\r\n      y: it.y * mult,\r\n      px: it.px * mult,\r\n      py: it.py * mult,\r\n      width: it.width * mult,\r\n      height: it.height * mult\r\n    };\r\n  });\r\n  let min_x = Math.min.apply(Math, rects.map(it => it.x));\r\n  let min_y = Math.min.apply(Math, rects.map(it => it.y));\r\n  let max_x = Math.max.apply(Math, rects.map(it => it.x + it.width + 1));\r\n  let max_y = Math.max.apply(Math, rects.map(it => it.y + it.height + 1));\r\n  return (\r\n    <Paper style={{ padding: \"17px\" }}>\r\n      <div>\r\n        <h2 style={{ paddingLeft: \"17px\" }}>Input Split</h2>\r\n        <div\r\n          style={{\r\n            width: `${max_x - min_x + 4}px`,\r\n            height: `${max_y - min_y + 3}px`,\r\n            backgroundColor: \"#AAAAAA\",\r\n            backgroundImage:\r\n              \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='25' height='25' viewBox='0 0 20 20'%3E%3Cg %3E%3Cpolygon fill='%23777777' points='20 10 10 0 0 0 20 20'/%3E%3Cpolygon fill='%23777777' points='0 10 0 20 10 20'/%3E%3C/g%3E%3C/svg%3E\\\")\"\r\n          }}\r\n        >\r\n          <svg\r\n            width={max_x - min_x}\r\n            height={max_y - min_y}\r\n            style={{ border: \"2px solid black\" }}\r\n          >\r\n            {rects.map(rect => (\r\n              <Rect\r\n                index={rect.index}\r\n                key={rect.index}\r\n                x={rect.x - min_x}\r\n                y={rect.y - min_y}\r\n                w={rect.rotated ? rect.height : rect.width}\r\n                h={rect.rotated ? rect.width : rect.height}\r\n              />\r\n            ))}\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h2 style={{ paddingLeft: \"17px\" }}>Pack</h2>\r\n        <div\r\n          style={{\r\n            width: `${props.stripWidth * mult}px`,\r\n            height: `${props.data.packHeight * mult}px`,\r\n            backgroundColor: \"#AAAAAA\",\r\n            backgroundImage:\r\n              \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='25' height='25' viewBox='0 0 20 20'%3E%3Cg %3E%3Cpolygon fill='%23777777' points='20 10 10 0 0 0 20 20'/%3E%3Cpolygon fill='%23777777' points='0 10 0 20 10 20'/%3E%3C/g%3E%3C/svg%3E\\\")\"\r\n          }}\r\n        >\r\n          <svg\r\n            transform=\"rotate(180)\"\r\n            width={props.stripWidth * mult}\r\n            height={props.data.packHeight * mult}\r\n            style={{ border: \"2px solid black\" }}\r\n          >\r\n            {rects.map(rect => (\r\n              <Rect\r\n                index={rect.index}\r\n                key={rect.index}\r\n                x={rect.px}\r\n                y={rect.py}\r\n                w={rect.width}\r\n                h={rect.height}\r\n              />\r\n            ))}\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Solution;\r\n","export function updateState(newValues) {\r\n  let originalStateCopy = Object.assign({}, this.state);\r\n  let newState = Object.assign(originalStateCopy, newValues);\r\n  this.setState(newState);\r\n}\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { updateState } from \"../utils/utils.js\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nclass PackerTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solutions: props.solutions,\r\n      selected: props.solutions[0]\r\n    };\r\n\r\n    this.onSelectedPackerChange = this.onSelectedPackerChange.bind(this);\r\n    this.updateState = updateState.bind(this);\r\n  }\r\n\r\n  onSelectedPackerChange(solution) {\r\n    this.updateState({\r\n      selected: solution\r\n    });\r\n    this.props.callback(solution)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.solutions !== prevProps.solutions) {\r\n      this.updateState({\r\n        solutions: this.props.solutions,\r\n        selected: this.props.solutions[0],\r\n        efficency: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper style={{ padding: \"20px\" }}>\r\n        <h2 style={{ paddingLeft: \"17px\" }}>Packer</h2>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell size=\"small\">Packer Name</TableCell>\r\n              <TableCell align=\"right\" size=\"small\">Price</TableCell>\r\n              <TableCell align=\"right\" size=\"small\">Efficency</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.state.solutions.map(row => (\r\n              <TableRow\r\n                key={row.packerName}\r\n                selected={this.state.selected.packerName === row.packerName}\r\n                onClick={event => this.onSelectedPackerChange(row)}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.packerName}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n                <TableCell align=\"right\">{row.efficency.toFixed(3)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PackerTable;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Solution from \"./Solution.js\";\r\nimport PackerTable from \"./PackerTable.js\";\r\nimport { updateState } from \"../utils/utils.js\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nfunction loadFile(context, name) {\r\n  fetch(`http://localhost:4567/${name}`).then(result =>\r\n    result\r\n      .json()\r\n      .then(data => {\r\n        data.solutions = data.solutions.sort(\r\n          (a, b) => a.efficency * 10 - b.efficency * 10\r\n        );\r\n        context.updateState({\r\n          elements: data,\r\n          solutions: data.solutions,\r\n          activeSolution: data.solutions[0]\r\n        });\r\n      })\r\n      .catch(error => console.log(error))\r\n  );\r\n}\r\n\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: \"\",\r\n      content: \"\",\r\n      elements: null,\r\n      solutions: [],\r\n      activeSolution: null\r\n    };\r\n\r\n    this.updateState = updateState.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.file === null || this.props.file !== prevProps.file) {\r\n      this.updateState({ file: this.props.file });\r\n      loadFile(this, this.props.file);\r\n    }\r\n  }\r\n\r\n  selectedPackerChanged(solution) {\r\n    this.updateState({\r\n      activeSolution: solution\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.elements == null) {\r\n      return <div>No data</div>;\r\n    }\r\n    return (\r\n      <Grid container direction=\"row\" spacing={1}>\r\n        <Grid item xs={6}>\r\n          <PackerTable\r\n            solutions={this.state.elements.solutions}\r\n            callback={solution => this.selectedPackerChanged(solution)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Solution\r\n            stripWidth={this.state.elements.ctInput.stripWidth}\r\n            data={this.state.activeSolution}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Chart from \"./components/Chart.js\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { updateState } from \"./utils/utils.js\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: \"\",\r\n      files: []\r\n    };\r\n    this.componentDidUpdate();\r\n\r\n    this.onSelectedFileChange = this.onSelectedFileChange.bind(this);\r\n    this.updateState = updateState.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.files.length === 0) {\r\n      fetch(\"http://localhost:4567/\").then(response =>\r\n        response.json().then(data =>\r\n          this.updateState({\r\n            file: data[0],\r\n            files: data\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  onSelectedFileChange(file) {\r\n    this.updateState({\r\n      file: file\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container direction=\"row\" style={{ flexGrow: 1 }} spacing={1}>\r\n        <Grid item xs={2}> \r\n          <Paper style={{padding: \"20px\"}}>\r\n            <h2 style={{ paddingLeft: \"17px\" }}>Solutions</h2>\r\n            <h5 style={{ paddingTop: \"17px\", paddingLeft: \"17px\" }}>File Name</h5>\r\n            <List>\r\n              {this.state.files.map(file => (\r\n                <ListItem\r\n                  button\r\n                  selected={this.state.file === file}\r\n                  onClick={event => this.onSelectedFileChange(file)}\r\n                >\r\n                  <ListItemText primary={file} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <Chart file={this.state.file} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}